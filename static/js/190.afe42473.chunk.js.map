{"version":3,"file":"static/js/190.afe42473.chunk.js","mappings":"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","sources":["webpack://tweets-hw/./src/components/tweetsCard/TweetsCard.module.css?2ccd","components/tweetsCard/TweetsCard.jsx","pages/Tweets.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardsList\":\"TweetsCard_cardsList__dCYal\",\"tweetsCard\":\"TweetsCard_tweetsCard__R1BcE\",\"cardTop\":\"TweetsCard_cardTop__qsetM\",\"popupImg\":\"TweetsCard_popupImg__A-jUG\",\"avatar\":\"TweetsCard_avatar__EdbHy\",\"cardLine\":\"TweetsCard_cardLine__YLDMj\",\"cardBottom\":\"TweetsCard_cardBottom__ayy4-\",\"tweetsCount\":\"TweetsCard_tweetsCount__FJGtE\",\"followersCount\":\"TweetsCard_followersCount__Fq2EB\",\"followBtn\":\"TweetsCard_followBtn__GugBW\",\"followingBtn\":\"TweetsCard_followingBtn__LivVf\"};","import css from './TweetsCard.module.css';\nimport logo from 'images/logo.png';\nimport popup from 'images/popup-img.png';\nimport avatar from 'images/avatar-img.png';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst TweetsCard = () => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          'https://646e54299c677e23218b8751.mockapi.io/users/users'\n        );\n        setUsers(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleBtnClick = async event => {\n    const userId = event.currentTarget.dataset.userId;\n\n    setUsers(prevUsers => {\n      return prevUsers.map(user => {\n        if (user.id === userId) {\n          const newFollowersCount = user.isFollowing\n            ? user.followers - 1\n            : user.followers + 1;\n\n          axios\n            .put(\n              `https://646e54299c677e23218b8751.mockapi.io/users/users/${userId}`,\n              {\n                ...user,\n                isFollowing: !user.isFollowing,\n                followers: newFollowersCount,\n              }\n            )\n            .then(response => {\n              console.log('Дані оновлено успішно:', response.data);\n            })\n            .catch(error => {\n              console.log('Помилка при оновленні даних:', error);\n            });\n\n          return {\n            ...user,\n            isFollowing: !user.isFollowing,\n            followers: newFollowersCount,\n          };\n        }\n        return user;\n      });\n    });\n  };\n\n  const formatNumber = number => {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  };\n\n  return (\n    <div className=\"container\">\n      <ul className={css.cardsList}>\n        {users.map(user => (\n          <li className={css.tweetsCard} key={user.id}>\n            <div className={css.cardTop}>\n              <a href=\"https://www.edu.goit.global/\">\n                <img className={css.logoImg} src={logo} alt=\"logo\" />\n              </a>\n              <span className={css.popupImg}>\n                <img src={popup} alt=\"chat\" />\n              </span>\n              <span className={css.avatar}>\n                <img src={avatar} alt=\"avatar\" />\n              </span>\n            </div>\n            <span className={css.cardLine}></span>\n            <div className={css.cardBottom}>\n              <p className={css.tweetsCount}>\n                <span>{user.tweets}</span> tweets\n              </p>\n              <p className={css.followersCount}>\n                <span>{formatNumber(user.followers)}</span> Followers\n              </p>\n              <button\n                className={`${css.followBtn} ${\n                  user.isFollowing ? css.followingBtn : ''\n                }`}\n                type=\"button\"\n                onClick={handleBtnClick}\n                data-user-id={user.id}\n              >\n                {user.isFollowing ? 'Following' : 'Follow'}\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TweetsCard;\n","import TweetsCard from 'components/tweetsCard/TweetsCard';\n\nconst Tweets = () => {\n  return (\n    <>\n      <h1 style={{ textAlign: 'center' }}>TweetsCard:</h1>\n      <TweetsCard />\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["_useState","useState","_useState2","_slicedToArray","users","setUsers","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","t0","console","log","stop","apply","arguments","handleBtnClick","_ref2","_callee2","event","userId","_context2","currentTarget","dataset","prevUsers","map","user","id","newFollowersCount","isFollowing","followers","put","concat","_objectSpread","then","catch","error","_x","_jsx","className","children","css","cardsList","_jsxs","tweetsCard","cardTop","href","logoImg","src","alt","popupImg","popup","avatar","cardLine","cardBottom","tweetsCount","tweets","followersCount","number","toString","replace","followBtn","followingBtn","type","onClick","_Fragment","style","textAlign","TweetsCard"],"sourceRoot":""}